{
  "name": "mangopay",
  "version": "0.0.8",
  "description": "Mango API wrapper",
  "homepage": "https://github.com/larafale/mangopay",
  "author": {
    "name": "Louis Grellet @Larafale",
    "email": "as1cron@gmail.com"
  },
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/larafale/mangopay.git"
  },
  "engines": {
    "node": "0.10.x"
  },
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "~1.20.1",
    "moment": "^2.8.3"
  },
  "dependencies": {
    "when": "~3.1.0"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "readme": "# MangoPay nodejs APIv2 wrapper\n\nThis is not the official Mangopay Node library.  \nAt this time they don't have one, so we'll see what's next.  \nIt's here for a personal use and inspired by Stripe node api wrapper.\n\nFeel free to use & contribute\n\n## Installation\n\n`npm install mangopay`\n\n## Documentation\n\nDocumentation is available at [http://docs.mangopay.com/api-references](http://docs.mangopay.com/api-references)\n\n## API Overview\n\nEvery resource is accessed via your `mango` instance:\n\n```js\nvar mango = require('mangopay')({\n    username: 'username',\n    password: 'passphrase',\n    production: false\n})\n// mango.{ RESOURCE_NAME }.{ METHOD_NAME }()\n```\n\nEvery resource method accepts an optional callback as the last argument:\n\n```js\nmango.card.create({ \n  UserId: '2565355',\n  CardNumber: '4970100000000154',\n  CardExpirationDate: '0216',\n  CardCvx: '123',\n}, function(err, card, res){\n  err;\t\n  card; // mango card object \n  res; // raw 'http' response object => res.statusCode === 200\n})\n```\n\n### Available resources & methods\n\n*Where you see `params` it is a plain JavaScript object, e.g. `{ Email: 'foo@example.com' }`*\n\n* user\n\nCreate natural user: \n  \n```js\n    mango.user.create({\n      FirstName: \"Victor\", // Required\n      LastName: \"Hugo\",    // Required\n      Birthday: 1300186358,  // Required\n      Nationality: \"FR\", // Required, default: 'FR'\n      CountryOfResidence: \"FR\", // Required, default: 'FR'\n      Address: \"1 rue des Misérables, Paris\",\n      Occupation: \"Writer\", \n      IncomeRange: \"6\", \n      ProofOfIdentity: null,\n      ProofOfAddress: null, \n      PersonType: \"NATURAL\", \n      Email: \"victor@hugo.com\", \n      Tag: \"custom tag\",\n    }, function(err, user, res){\n        console.log('err', err);\n        console.log('user', user);\n        console.log('res', res.statusCode);\n    });\n```\n\nCreate natural user and wallet: \n  \n```js\n    mango.user.signup({\n      FirstName: \"Victor\", // Required\n      LastName: \"Hugo\",    // Required\n      Birthday: 1300186358,  // Required\n      Nationality: \"FR\", // Required, default: 'FR'\n      CountryOfResidence: \"FR\", // Required, default: 'FR'\n      Address: \"1 rue des Misérables, Paris\",\n      Occupation: \"Writer\", \n      IncomeRange: \"6\", \n      ProofOfIdentity: null,\n      ProofOfAddress: null, \n      PersonType: \"NATURAL\", \n      Email: \"victor@hugo.com\", \n      Tag: \"custom tag\",\n    }, function(err, wallet, res){\n        console.log('err', err);\n        console.log('wallet', wallet);\n        console.log('res', res.statusCode);\n    });\n```\n\nFetch natural user: \n  \n```js\n    mango.user.fetch({\n      Id: \"123456789\", // Required\n    }, function(err, user, res){\n        console.log('err', err);\n        console.log('user', user);\n        console.log('res', res.statusCode);\n    });\n```\n\nUpdate natural user: \n  \n```js\n    mango.user.update({\n      Id: \"123456789\", // Required\n      // all the fields to be updated\n    }, function(err, user, res){\n        console.log('err', err);\n        console.log('user', user);\n        console.log('res', res.statusCode);\n    });\n```\n\nList natural users: \n  \n```js\n    mango.user.list(function(err,users){\n        console.log(users); \n    });\n```\n\nCreate legal user: \n  \n```js\n    mango.user.createLegal({\n      Name: 'mycompany.com', \n      Email: 'info@mycompany.com',\n      LegalPersonType: 'BUSINESS',\n      LegalRepresentativeFirstName: 'John',\n      LegalRepresentativeLastName: 'Doe',\n      LegalRepresentativeEmail: 'john_doe@mycompany.es',\n      HeadquartersAddress: 'Canal Street, Madrid, Spain',\n      LegalRepresentativeAdress: 'Canal Street, Madrid, Spain',\n      LegalRepresentativeBirthday: moment('300681', 'DDMMYY').unix(),\n      LegalRepresentativeCountryOfResidence: 'ES',\n      LegalRepresentativeNationality: 'ES',\n    }, function(err, user, res){\n        console.log('err', err);\n        console.log('user', user);\n        console.log('res', res.statusCode);\n    });\n```\n\nFetch legal user: \n  \n```js\n    mango.user.fetchLegal({\n      Id: \"123456789\", // Required\n    }, function(err, user, res){\n        console.log('err', err);\n        console.log('user', user);\n        console.log('res', res.statusCode);\n    });\n```\n\nList all cards belonging to a user: \n  \n```js\n    mango.user.cards({\n      UserId: \"123456789\", // Required\n    }, function(err, cards, res){\n        console.log('err', err);\n        console.log('cards', cards);\n        console.log('res', res.statusCode);\n    });\n```\n\nList all wallets belonging to a user: \n  \n```js\n    mango.user.wallets({\n      UserId: \"123456789\", // Required\n    }, function(err, wallets, res){\n        console.log('err', err);\n        console.log('wallets', wallets);\n        console.log('res', res.statusCode);\n    });\n```\n\nList all transactions belonging to a user: \n  \n```js\n    mango.user.transactions({\n      UserId: \"123456789\", // Required\n    }, function(err, transactions, res){\n        console.log('err', err);\n        console.log('transactions', transactions);\n        console.log('res', res.statusCode);\n    });\n```\n\nList all bank accounts linked to a user: \n  \n```js\n    mango.user.banks({\n      UserId: \"123456789\", // Required\n    }, function(err, bankaccounts, res){\n        console.log('err', err);\n        console.log('bankaccounts', bankaccounts);\n        console.log('res', res.statusCode);\n    });\n```\n\n* wallet\n\nCreate wallet for a user:\n\n```js\n    mango.wallet.create({\n        Owners: [\"1167492\"], // Required\n        Description: \"A very cool wallet\", // Required, default: 'wallet'\n        Currency: \"EUR\", // Required, default: 'EUR'\n        Tag: \"your custom tag\"\n    }, function(err, wallet, res){\n        console.log('err', err);\n        console.log('wallet', wallet);\n        console.log('res', res.statusCode);\n    });\n```\n\nFetch wallet by id:\n\n```js\n    mango.wallet.fetch({\n        Id: \"1167492\", // Required\n    }, function(err, wallet, res){\n        console.log('err', err);\n        console.log('wallet', wallet);\n        console.log('res', res.statusCode);\n    });\n```\n\nTransfer e-money from a wallet to another wallet:\n\n```js\n    mango.wallet.transfer({\n        AuthorId : \"1167495\", // Required\n        DebitedFunds: {Currency : \"EUR\", Amount : 1000}, // Required\n        Fees : {Currency : \"EUR\", Amount : 100}, // Required, default 'EUR' and 0 \n        DebitedWalletID : \"1167496\", // Required (Where the funds are held before the transfer)\n        CreditedWalletID : \"1167504\", // Required (Where the funds will be held after the transfer)\n        CreditedUserId : \"1167502\",\n        Tag : \"DefaultTag\"\n    }, function(err, transfer, res){\n        console.log('err', err);\n        console.log('transfer', transfer);\n        console.log('res', res.statusCode);\n    });\n```\n\nFor a complete list of available parameters check [http://docs.mangopay.com/api-references/transfers/](http://docs.mangopay.com/api-references/transfers/)\n\nFetch all transactions for a given wallet: \n  \n```js\n    mango.wallet.transaction({\n      Id: \"123456789\", // Required\n    }, function(err, transaction, res){\n        console.log('err', err);\n        console.log('transaction', transcation);\n        console.log('res', res.statusCode);\n    });\n```\n\n* card\n\nRegister a card:\n\n```js\n    mango.card.create({ \n      UserId: '2565355',\n      CardNumber: '4970100000000154',\n      CardExpirationDate: '0216',\n      CardCvx: '123',\n    }, function(err, card, res){\n      err;\t\n      card; // mango card object \n      res; // raw 'http' response object => res.statusCode === 200\n    })\n```\n\nInit two-step card registration process:\n\n```js\n    mango.card.initRegistration({ \n      UserId: '2565355',\n      Currency: \"EUR\"\n    }, function(err, registration, res){\n      err;  \n      registration; // mango registration object \n      res; // raw 'http' response object => res.statusCode === 200\n    })\n```\n\nFetch a registered card:\n\n```js\n    mango.card.fetch({ \n      Id: '2565355', // Required\n    }, function(err, card, res){\n        console.log('err', err);\n        console.log('card', card);\n        console.log('res', res.statusCode);\n    })\n```\n\nUpdate a registered card: \n\nThe only editable parameter is `Active`, that can be switched from true to false and this action is irreversible.\n  \n```js\n    mango.card.update({\n      Id: \"2565355\", // Required\n    }, function(err, card, res){\n        console.log('err', err);\n        console.log('card', card);\n        console.log('res', res.statusCode);\n    });\n```\n\n* bank\n\nRegister a bank account for a user:\n\n```js\n    mango.bank.create({ \n        OwnerName: \"Victor Hugo\",           // Required\n        UserId: \"1345678\",                  // Required\n        Type: \"IBAN\",                       // Required, Default: 'IBAN'\n        OwnerAddress: \"1 rue des Misérables\", // Required\n        IBAN: \"FR3020041010124530725S03383\", // Required\n        BIC: \"CRLYFRPP\"                     // Required\n    }, function(err, bankaccount, res){\n        console.log('err', err);\n        console.log('bankaccount', bankaccount);\n        console.log('res', res.statusCode);\n    })\n```\n\nGet a bank account:\n\n```js\n    mango.bank.fetch({ \n      UserId: '2565355', // Required\n      BankId: '1234566', // Required\n    }, function(err, bankaccount, res){\n        console.log('err', err);\n        console.log('bankaccount', bankaccount);\n        console.log('res', res.statusCode);\n    })\n```\n\nWithdraw money from a wallet to a bank account:\n\n```js\n    mango.bank.wire({ \n        AuthorId:\"12567875\",        // Required\n        DebitedWalletId:\"12449234\", // Required\n        DebitedFunds:{              // Required\n            Currency:\"EUR\",\n            Amount:\"1000\"\n        },\n        Fees:{                      // Required, Default: 'EUR', 0\n            Currency:\"EUR\",\n            Amount:\"100\"\n        },\n        BankAccountId:\"12449209\",  // Required\n        BIC: \"CRLYFRPP\"            // Required\n    }, function(err, wire, res){\n        console.log('err', err);\n        console.log('wire', wire);\n        console.log('res', res.statusCode);\n    })\n```\n\nGet wire:\n\n```js\n    mango.bank.fetchWire({ \n      Id: '2565355', // Required\n    }, function(err, wire, res){\n        console.log('err', err);\n        console.log('wire', wire);\n        console.log('res', res.statusCode);\n    })\n```\n\n* author\n  * `create(params)`\n\n* document\n  * `create(params)`\n  * `createPage(params)`\n  * `fetch(params)`\n  * `update(params)`\n  \n* payin\n\nCreate a direct payin by tokenized card:\n\n```js\n    mango.payin.createByToken({         \n        AuthorId: \"1167492\",        // Required (The user ID of the Payin transaction’s author)\n        CreditedUserId : \"1167502\", // Required (The ID of the owner of the credited wallet)\n        DebitedFunds: {             // Required\n              Currency: \"EUR\",\n              Amount: 10000\n        },\n        Fees: {               // Required\n              Currency: \"EUR\",\n              Amount: 100\n        },\n        CreditedWalletId: \"1167810\",  // Required (The ID of the credited wallet)\n        CardId: \"1262419\",            // Required\n        SecureMode:\"DEFAULT\",\n        SecureModeReturnURL:\"https://www.mysite.com\",\n        Tag: \"payin\" // Required\n\n    }, function(err, payin, res){\n        console.log('err', err);\n        console.log('payin', payin);\n        console.log('res', res.statusCode);\n    })\n```\n\nFetch payin:\n\n```js\n    mango.payin.fetch({         \n        Id: \"1122477\",        // Required (The ID of the Payin)        \n    }, function(err, payin, res){\n        console.log('err', err);\n        console.log('payin', payin);\n        console.log('res', res.statusCode);\n    })\n```\n\nCreate refund:\n\n```js\n    mango.payin.createRefund({         \n        Id: \"1122477\",        // Required (The ID of the Payin)  \n        AuthorId: \"1167492\",  // Required (The user ID of the Payin transaction’s author)    \n    }, function(err, refund, res){\n        console.log('err', err);\n        console.log('refund', refund);\n        console.log('res', res.statusCode);\n    })\n``` \n\nFetch refund:\n\n```js\n    mango.payin.fetchRefund({         \n        Id: \"1348477\",        // Required (The ID of the Refund)  \n    }, function(err, refund, res){\n        console.log('err', err);\n        console.log('refund', refund);\n        console.log('res', res.statusCode);\n    })\n``` \n\n* hook\n\nCreate a hook:\n\n```js\n    mango.hook.create({         \n        Url: \"https://my_notifications_end_point.com\", // Required \n        EventType: \"PAYIN_NORMAL_SUCCEDED\",  // Required\n        Tag: \"hook\"\n\n    }, function(err, hook, res){\n        console.log('err', err);\n        console.log('hook', hook);\n        console.log('res', res.statusCode);\n    })\n```\n\nList all hooks:\n\n```js\n    mango.hook.list(function(err, hooks, res){\n        console.log('err', err);\n        console.log('hooks', hooks);\n        console.log('res', res.statusCode);\n    })\n```\n\nFetch hook:\n\n```js\n    mango.hook.fetch({         \n        Id: \"12345678\"\n    }, function(err, hook, res){\n        console.log('err', err);\n        console.log('hook', hook);\n        console.log('res', res.statusCode);\n    })\n```\n\nupdate hook:\n\n```js\n    mango.hook.update({         \n        Id: \"12345678\",\n        Status: \"DISABLED\"\n    }, function(err, hook, res){\n        console.log('err', err);\n        console.log('hook', hook);\n        console.log('res', res.statusCode);\n    })\n```\n\n\n### Test\n\n`npm test`  \ndon't forget to provide credentials in `test/__credentials.json`\n\n### Todos\n \n * oauth implementation\n * user methods only works for \"Natural Users\"\n * exhaustive api methods\n * ...\n \n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/larafale/mangopay/issues"
  },
  "_id": "mangopay@0.0.8",
  "dist": {
    "shasum": "75a67703de6d62d86ed39acf329b94b46a8dd2ec"
  },
  "_from": "mangopay@",
  "_resolved": "https://registry.npmjs.org/mangopay/-/mangopay-0.0.8.tgz"
}
